<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Fluent="urn:fluent-ribbon"
    xmlns:ap="clr-namespace:RibbonStyle.AttachProperties"
    xmlns:behaviors="clr-namespace:RibbonStyle.Behaviors"
    xmlns:converters="clr-namespace:RibbonStyle.Converters"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls">
    <ControlTemplate x:Key="win10RibbonTabControlTemplate" TargetType="{x:Type Fluent:RibbonTabControl}">
        <Grid
            x:Name="ContentGrid"
            Height="Auto"
            VerticalAlignment="Top"
            KeyboardNavigation.TabNavigation="Local">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition
                    x:Name="rowDefinition"
                    MinHeight="{TemplateBinding ContentHeight}"
                    MaxHeight="{TemplateBinding ContentHeight}" />
            </Grid.RowDefinitions>
            <Border
                Grid.Row="1"
                HorizontalAlignment="Stretch"
                Background="{Binding Path=(ap:RibbonTabControlHelper.ContentBackground), RelativeSource={RelativeSource AncestorType=Fluent:Ribbon}}"
                BorderThickness="0"
                ClipToBounds="True"
                CornerRadius="{Binding Path=(mah:ControlsHelper.CornerRadius), RelativeSource={RelativeSource AncestorType=Fluent:Ribbon}}"
                KeyboardNavigation.DirectionalNavigation="Contained"
                KeyboardNavigation.TabIndex="2"
                KeyboardNavigation.TabNavigation="Local"
                TextElement.Foreground="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabControl.Content.Foreground}">
                <DockPanel>
                    <Fluent:DropDownButton
                        x:Name="PART_DisplayOptionsButton"
                        Grid.Row="1"
                        Width="22"
                        Height="22"
                        Margin="0"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Bottom"
                        DockPanel.Dock="Right"
                        Icon="{DynamicResource Fluent.Ribbon.Images.RibbonDisplayOptions}"
                        Size="Small"
                        Style="{DynamicResource Fluent.Ribbon.Styles.RibbonTabControl.DisplayOptionsButton}"
                        ToolTip="{DynamicResource Fluent.Ribbon.ScreenTips.Resources.RibbonTabControl.DisplayOptionsScreenTip}"
                        Visibility="{Binding IsDisplayOptionsButtonVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Fluent.Ribbon.Converters.BoolToVisibilityConverter}}">
                        <Fluent:MenuItem
                            FontWeight="Bold"
                            Foreground="{DynamicResource Fluent.Ribbon.Brushes.Black}"
                            Header="{Binding Source={x:Static Fluent:RibbonLocalization.Current}, Path=Localization.ShowRibbon, Mode=OneWay}"
                            IsEnabled="False"
                            Opacity="1"
                            Template="{DynamicResource Fluent.Ribbon.Templates.MenuItem.HeaderOnly}"
                            Visibility="{Binding CanMinimize, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Fluent.Ribbon.Converters.BoolToVisibilityConverter}}" />
                        <Fluent:MenuItem
                            Header="{Binding Source={x:Static Fluent:RibbonLocalization.Current}, Path=Localization.ExpandRibbon, Mode=OneWay}"
                            IsCheckable="True"
                            IsChecked="{Binding IsMinimized, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static converters:InverseBoolConverter.Instance}}"
                            Visibility="{Binding CanMinimize, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Fluent.Ribbon.Converters.BoolToVisibilityConverter}}" />
                        <Fluent:MenuItem
                            Header="{Binding Source={x:Static Fluent:RibbonLocalization.Current}, Path=Localization.MinimizeRibbon, Mode=OneWay}"
                            IsCheckable="True"
                            IsChecked="{Binding IsMinimized, RelativeSource={RelativeSource TemplatedParent}}"
                            Visibility="{Binding CanMinimize, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Fluent.Ribbon.Converters.BoolToVisibilityConverter}}" />
                        <Separator
                            x:Name="DisplayOptionsButtonMenuSeparator"
                            Style="{x:Null}"
                            Visibility="Collapsed" />
                        <Fluent:MenuItem
                            FontWeight="Bold"
                            Foreground="{DynamicResource Fluent.Ribbon.Brushes.Black}"
                            Header="{Binding Source={x:Static Fluent:RibbonLocalization.Current}, Path=Localization.RibbonLayout, Mode=OneWay}"
                            IsEnabled="False"
                            Opacity="1"
                            Template="{DynamicResource Fluent.Ribbon.Templates.MenuItem.HeaderOnly}"
                            Visibility="{Binding CanUseSimplified, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Fluent.Ribbon.Converters.BoolToVisibilityConverter}}" />
                        <Fluent:MenuItem
                            Header="{Binding Source={x:Static Fluent:RibbonLocalization.Current}, Path=Localization.UseClassicRibbon, Mode=OneWay}"
                            IsCheckable="True"
                            IsChecked="{Binding IsSimplified, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static converters:InverseBoolConverter.Instance}}"
                            Visibility="{Binding CanUseSimplified, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Fluent.Ribbon.Converters.BoolToVisibilityConverter}}" />
                        <Fluent:MenuItem
                            Header="{Binding Source={x:Static Fluent:RibbonLocalization.Current}, Path=Localization.UseSimplifiedRibbon, Mode=OneWay}"
                            IsCheckable="True"
                            IsChecked="{Binding IsSimplified, RelativeSource={RelativeSource TemplatedParent}}"
                            Visibility="{Binding CanUseSimplified, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Fluent.Ribbon.Converters.BoolToVisibilityConverter}}" />
                    </Fluent:DropDownButton>

                    <mah:TransitioningContentControl
                        Name="mainContentControl"
                        Margin="1"
                        behaviors:ReloadBehavior.OnSelectedTabChanged="True"
                        Focusable="False"
                        RestartTransitionOnContentChange="True"
                        Transition="{TemplateBinding mah:TabControlHelper.Transition}"
                        UseLayoutRounding="True">
                        <ContentPresenter
                            x:Name="PART_SelectedContentPresenter"
                            Margin="{TemplateBinding Padding}"
                            ContentSource="SelectedContent"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            UseLayoutRounding="False" />
                    </mah:TransitioningContentControl>

                </DockPanel>
            </Border>
            <Grid
                x:Name="TabsGrid"
                HorizontalAlignment="Stretch"
                Background="{Binding Path=(ap:RibbonTabControlHelper.TabBackground), RelativeSource={RelativeSource AncestorType=Fluent:Ribbon}}"
                KeyboardNavigation.TabIndex="1"
                TextElement.Foreground="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabControl.TabsGrid.Foreground}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Fluent:WindowSteeringHelperControl Grid.ColumnSpan="4" />
                <ContentPresenter
                    Grid.Column="0"
                    Margin="0,0,0,1"
                    VerticalAlignment="Stretch"
                    ContentSource="Menu" />
                <Fluent:RibbonScrollViewer
                    Grid.Column="1"
                    Width="Auto"
                    Margin="0"
                    HorizontalAlignment="Left"
                    HorizontalScrollBarVisibility="Hidden"
                    IsHitTestVisible="True"
                    IsTabStop="False"
                    Style="{DynamicResource Fluent.Ribbon.Styles.RibbonTabScrollViewer}"
                    VerticalScrollBarVisibility="Disabled"
                    Visibility="{Binding AreTabHeadersVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Fluent.Ribbon.Converters.BoolToVisibilityConverter}}">
                    <DockPanel>
                        <TextBox
                            Width="320"
                            Margin="1"
                            mah:TextBoxHelper.AutoWatermark="True"
                            mah:TextBoxHelper.Watermark="操作说明搜索"
                            BorderBrush="Transparent"
                            DockPanel.Dock="Right"
                            Style="{StaticResource operationSearchTextBoxStyle}" />
                        <Fluent:RibbonTabsContainer
                            x:Name="PART_TabsContainer"
                            Height="Auto"
                            Margin="0"
                            HorizontalAlignment="Stretch"
                            IsItemsHost="True"
                            KeyboardNavigation.TabIndex="1" />
                    </DockPanel>
                </Fluent:RibbonScrollViewer>
                <StackPanel
                    Grid.Column="3"
                    Margin="0,0,0,1"
                    HorizontalAlignment="Right"
                    Orientation="Horizontal">
                    <StackPanel
                        x:Name="PART_ToolbarPanel"
                        Orientation="Horizontal"
                        Visibility="{Binding IsToolBarVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Fluent.Ribbon.Converters.BoolToVisibilityConverter}}">
                        <Button Style="{StaticResource win10.Button.WindowCommands}" />
                    </StackPanel>
                </StackPanel>
            </Grid>

            <Popup
                x:Name="PART_Popup"
                AllowsTransparency="True"
                IsOpen="{TemplateBinding IsDropDownOpen}"
                Placement="Custom"
                PlacementTarget="{Binding Path=SelectedTabItem, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="{x:Static Fluent:RibbonTabControl.AdditionalPopupSpaceForKeyTipsGridLength}" />
                        <RowDefinition MinHeight="{TemplateBinding ContentHeight}" MaxHeight="{TemplateBinding ContentHeight}" />
                        <RowDefinition Height="{x:Static Fluent:RibbonTabControl.AdditionalPopupSpaceForKeyTipsGridLength}" />
                    </Grid.RowDefinitions>
                    <Border
                        Grid.Row="1"
                        Margin="1,0"
                        Background="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabControl.Content.Background}"
                        BorderBrush="{Binding Path=SelectedTabItem.BorderBrush, RelativeSource={RelativeSource TemplatedParent}, FallbackValue=Transparent}"
                        BorderThickness="0,0,0,1"
                        KeyboardNavigation.DirectionalNavigation="Contained"
                        KeyboardNavigation.TabNavigation="Local"
                        TextElement.Foreground="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabControl.Content.Foreground}">
                        <ContentControl
                            x:Name="popupContentControl"
                            Margin="0"
                            Focusable="False" />
                    </Border>
                </Grid>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMinimized" Value="True">
                <Setter TargetName="mainContentControl" Property="Content" Value="{x:Null}" />
                <Setter TargetName="popupContentControl" Property="Content" Value="{Binding ElementName=PART_SelectedContentPresenter, Mode=OneWay}" />
                <Setter TargetName="rowDefinition" Property="MinHeight" Value="0" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="CanMinimize" Value="False" />
                    <Condition Property="CanUseSimplified" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_DisplayOptionsButton" Property="Visibility" Value="Collapsed" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="CanMinimize" Value="True" />
                    <Condition Property="CanUseSimplified" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="DisplayOptionsButtonMenuSeparator" Property="Visibility" Value="Visible" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="win11RibbonTabControlTemplate" TargetType="{x:Type Fluent:RibbonTabControl}">
        <Grid
            x:Name="ContentGrid"
            Height="Auto"
            VerticalAlignment="Top"
            KeyboardNavigation.TabNavigation="Local">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition
                    x:Name="rowDefinition"
                    MinHeight="{TemplateBinding ContentHeight}"
                    MaxHeight="{TemplateBinding ContentHeight}" />
            </Grid.RowDefinitions>
            <Border
                Grid.Row="1"
                HorizontalAlignment="Stretch"
                Background="{Binding Path=(ap:RibbonTabControlHelper.ContentBackground), RelativeSource={RelativeSource AncestorType=Fluent:Ribbon}}"
                BorderThickness="0"
                ClipToBounds="True"
                CornerRadius="{Binding Path=(mah:ControlsHelper.CornerRadius), RelativeSource={RelativeSource AncestorType=Fluent:Ribbon}}"
                KeyboardNavigation.DirectionalNavigation="Contained"
                KeyboardNavigation.TabIndex="2"
                KeyboardNavigation.TabNavigation="Local"
                TextElement.Foreground="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabControl.Content.Foreground}">
                <Grid>
                    <mah:TransitioningContentControl
                        Name="mainContentControl"
                        Margin="5"
                        behaviors:ReloadBehavior.OnSelectedTabChanged="True"
                        Focusable="False"
                        RestartTransitionOnContentChange="True"
                        Transition="{TemplateBinding mah:TabControlHelper.Transition}"
                        UseLayoutRounding="True">
                        <ContentPresenter
                            x:Name="PART_SelectedContentPresenter"
                            Margin="{TemplateBinding Padding}"
                            ContentSource="SelectedContent"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            UseLayoutRounding="False" />
                    </mah:TransitioningContentControl>
                    <Fluent:DropDownButton
                        x:Name="PART_DisplayOptionsButton"
                        Grid.Column="3"
                        Width="22"
                        Height="22"
                        Margin="5"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Bottom"
                        Icon="{DynamicResource Fluent.Ribbon.Images.RibbonDisplayOptions}"
                        Size="Small"
                        Style="{DynamicResource Fluent.Ribbon.Styles.RibbonTabControl.DisplayOptionsButton}"
                        ToolTip="{DynamicResource Fluent.Ribbon.ScreenTips.Resources.RibbonTabControl.DisplayOptionsScreenTip}"
                        Visibility="{Binding IsDisplayOptionsButtonVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Fluent.Ribbon.Converters.BoolToVisibilityConverter}}">
                        <Fluent:MenuItem
                            FontWeight="Bold"
                            Foreground="{DynamicResource Fluent.Ribbon.Brushes.Black}"
                            Header="{Binding Source={x:Static Fluent:RibbonLocalization.Current}, Path=Localization.ShowRibbon, Mode=OneWay}"
                            IsEnabled="False"
                            Opacity="1"
                            Template="{DynamicResource Fluent.Ribbon.Templates.MenuItem.HeaderOnly}"
                            Visibility="{Binding CanMinimize, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Fluent.Ribbon.Converters.BoolToVisibilityConverter}}" />
                        <Fluent:MenuItem
                            Header="{Binding Source={x:Static Fluent:RibbonLocalization.Current}, Path=Localization.ExpandRibbon, Mode=OneWay}"
                            IsCheckable="True"
                            IsChecked="{Binding IsMinimized, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static converters:InverseBoolConverter.Instance}}"
                            Visibility="{Binding CanMinimize, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Fluent.Ribbon.Converters.BoolToVisibilityConverter}}" />
                        <Fluent:MenuItem
                            Header="{Binding Source={x:Static Fluent:RibbonLocalization.Current}, Path=Localization.MinimizeRibbon, Mode=OneWay}"
                            IsCheckable="True"
                            IsChecked="{Binding IsMinimized, RelativeSource={RelativeSource TemplatedParent}}"
                            Visibility="{Binding CanMinimize, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Fluent.Ribbon.Converters.BoolToVisibilityConverter}}" />
                        <Separator
                            x:Name="DisplayOptionsButtonMenuSeparator"
                            Style="{x:Null}"
                            Visibility="Collapsed" />
                        <Fluent:MenuItem
                            FontWeight="Bold"
                            Foreground="{DynamicResource Fluent.Ribbon.Brushes.Black}"
                            Header="{Binding Source={x:Static Fluent:RibbonLocalization.Current}, Path=Localization.RibbonLayout, Mode=OneWay}"
                            IsEnabled="False"
                            Opacity="1"
                            Template="{DynamicResource Fluent.Ribbon.Templates.MenuItem.HeaderOnly}"
                            Visibility="{Binding CanUseSimplified, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Fluent.Ribbon.Converters.BoolToVisibilityConverter}}" />
                        <Fluent:MenuItem
                            Header="{Binding Source={x:Static Fluent:RibbonLocalization.Current}, Path=Localization.UseClassicRibbon, Mode=OneWay}"
                            IsCheckable="True"
                            IsChecked="{Binding IsSimplified, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static converters:InverseBoolConverter.Instance}}"
                            Visibility="{Binding CanUseSimplified, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Fluent.Ribbon.Converters.BoolToVisibilityConverter}}" />
                        <Fluent:MenuItem
                            Header="{Binding Source={x:Static Fluent:RibbonLocalization.Current}, Path=Localization.UseSimplifiedRibbon, Mode=OneWay}"
                            IsCheckable="True"
                            IsChecked="{Binding IsSimplified, RelativeSource={RelativeSource TemplatedParent}}"
                            Visibility="{Binding CanUseSimplified, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Fluent.Ribbon.Converters.BoolToVisibilityConverter}}" />
                    </Fluent:DropDownButton>
                </Grid>

            </Border>

            <Grid
                x:Name="TabsGrid"
                Grid.Row="0"
                Margin="2"
                HorizontalAlignment="Stretch"
                Background="{Binding Path=(ap:RibbonTabControlHelper.TabBackground), RelativeSource={RelativeSource AncestorType=Fluent:Ribbon}}"
                KeyboardNavigation.TabIndex="1"
                TextElement.Foreground="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabControl.TabsGrid.Foreground}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Fluent:WindowSteeringHelperControl Grid.ColumnSpan="4" />
                <ContentPresenter
                    Grid.Column="0"
                    Margin="0,0,0,1"
                    VerticalAlignment="Stretch"
                    ContentSource="Menu" />
                <Fluent:RibbonScrollViewer
                    Grid.Column="1"
                    Width="Auto"
                    Margin="0"
                    HorizontalAlignment="Left"
                    HorizontalScrollBarVisibility="Hidden"
                    IsHitTestVisible="True"
                    IsTabStop="False"
                    Style="{DynamicResource Fluent.Ribbon.Styles.RibbonTabScrollViewer}"
                    VerticalScrollBarVisibility="Disabled"
                    Visibility="{Binding AreTabHeadersVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Fluent.Ribbon.Converters.BoolToVisibilityConverter}}">
                    <DockPanel>

                        <Fluent:RibbonTabsContainer
                            x:Name="PART_TabsContainer"
                            Height="Auto"
                            Margin="0"
                            HorizontalAlignment="Stretch"
                            IsItemsHost="True"
                            KeyboardNavigation.TabIndex="1" />
                    </DockPanel>
                </Fluent:RibbonScrollViewer>
                <StackPanel Grid.Column="3" Orientation="Horizontal">
                    <Button
                        Margin="3,0"
                        Padding="8,0"
                        mah:ControlsHelper.FocusBorderThickness="0.3"
                        Background="White"
                        FontWeight="Normal">
                        <DockPanel>
                            <iconPacks:PackIconFeatherIcons
                                Width="10"
                                Height="10"
                                VerticalAlignment="Center"
                                Kind="MessageSquare" />
                            <TextBlock FontSize="14" Text=" 批注" />
                        </DockPanel>
                    </Button>
                    <mah:DropDownButton
                        Margin="3,0"
                        Padding="8,0"
                        VerticalContentAlignment="Center"
                        mah:ControlsHelper.CornerRadius="3"
                        ArrowBrush="White"
                        ArrowMouseOverBrush="White"
                        ArrowPressedBrush="White"
                        Background="{StaticResource MahApps.Brushes.AccentBase}"
                        BorderThickness="0.3"
                        Content="共享"
                        FontSize="14"
                        Foreground="White">
                        <mah:DropDownButton.Icon>
                            <iconPacks:PackIconFontAwesome
                                Width="15"
                                Height="15"
                                Margin="5,0,-5,0"
                                Kind="ShareSquareRegular" />
                        </mah:DropDownButton.Icon>
                    </mah:DropDownButton>
                </StackPanel>
            </Grid>
            <Popup
                x:Name="PART_Popup"
                AllowsTransparency="True"
                IsOpen="{TemplateBinding IsDropDownOpen}"
                Placement="Custom"
                PlacementTarget="{Binding Path=SelectedTabItem, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="{x:Static Fluent:RibbonTabControl.AdditionalPopupSpaceForKeyTipsGridLength}" />
                        <RowDefinition MinHeight="{TemplateBinding ContentHeight}" MaxHeight="{TemplateBinding ContentHeight}" />
                        <RowDefinition Height="{x:Static Fluent:RibbonTabControl.AdditionalPopupSpaceForKeyTipsGridLength}" />
                    </Grid.RowDefinitions>
                    <Border
                        Grid.Row="1"
                        Margin="1,0"
                        Background="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabControl.Content.Background}"
                        BorderBrush="{Binding Path=SelectedTabItem.BorderBrush, RelativeSource={RelativeSource TemplatedParent}, FallbackValue=Transparent}"
                        BorderThickness="0,0,0,1"
                        KeyboardNavigation.DirectionalNavigation="Contained"
                        KeyboardNavigation.TabNavigation="Local"
                        TextElement.Foreground="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabControl.Content.Foreground}">
                        <ContentControl
                            x:Name="popupContentControl"
                            Margin="0"
                            Focusable="False" />
                    </Border>
                </Grid>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMinimized" Value="True">
                <Setter TargetName="mainContentControl" Property="Content" Value="{x:Null}" />
                <Setter TargetName="popupContentControl" Property="Content" Value="{Binding ElementName=PART_SelectedContentPresenter, Mode=OneWay}" />
                <Setter TargetName="rowDefinition" Property="MinHeight" Value="0" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="CanMinimize" Value="False" />
                    <Condition Property="CanUseSimplified" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_DisplayOptionsButton" Property="Visibility" Value="Collapsed" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="CanMinimize" Value="True" />
                    <Condition Property="CanUseSimplified" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="DisplayOptionsButtonMenuSeparator" Property="Visibility" Value="Visible" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style
        x:Key="win11ibbonTabControlStyle"
        BasedOn="{StaticResource Fluent.Ribbon.Styles.RibbonTabControl}"
        TargetType="Fluent:RibbonTabControl">
        <Setter Property="Template" Value="{StaticResource win11RibbonTabControlTemplate}" />
        <Setter Property="mah:TabControlHelper.Transition" Value="Left" />

    </Style>
    <Style
        x:Key="win10RibbonTabControlStyle"
        BasedOn="{StaticResource Fluent.Ribbon.Styles.RibbonTabControl}"
        TargetType="Fluent:RibbonTabControl">
        <Setter Property="Template" Value="{StaticResource win10RibbonTabControlTemplate}" />
        <Setter Property="mah:TabControlHelper.Transition" Value="Left" />
    </Style>
</ResourceDictionary>