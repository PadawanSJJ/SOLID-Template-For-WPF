<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:attach="clr-namespace:VisualStudioStyle.Attaches"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls">
    <Style
        x:Key="Button.ToolBar"
        BasedOn="{StaticResource MahApps.Styles.Button.ToolBar}"
        TargetType="Button">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Text}" />
        <Setter Property="Padding" Value="2" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource Button.ToolBar.MouseOverBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Button.ToolBar.MouseOverBorderBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource Button.ToolBar.PressedBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Button.ToolBar.MouseOverBorderBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Gray3}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="Button.StatusBar"
        BasedOn="{StaticResource Button.ToolBar}"
        TargetType="Button">
        <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource Button.StatusBar.MouseOverMashBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="menuItemButton"
        BasedOn="{StaticResource Button.ToolBar}"
        TargetType="Button">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20" />
                                <ColumnDefinition Width="10" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="10" />
                            </Grid.ColumnDefinitions>
                            <iconPacks:PackIconCodicons
                                Margin="3,0,0,0"
                                VerticalAlignment="Center"
                                Kind="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(attach:ButtonAttach.Icon)}" />
                            <mah:ContentControlEx
                                Name="PART_ContentPresenter"
                                Grid.Column="2"
                                Padding="{TemplateBinding Padding}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.ContentCharacterCasing)}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <TextBlock
                                Grid.Column="3"
                                VerticalAlignment="Center"
                                Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(attach:ButtonAttach.KeyGesture)}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FFB1C5FF" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="ToggleButton.ToolBar"
        BasedOn="{StaticResource MahApps.Styles.ToggleButton.ToolBar}"
        TargetType="ToggleButton">
        <Setter Property="mah:ControlsHelper.CornerRadius" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="FontSize" Value="{DynamicResource MahApps.Font.Size.Button.Flat}" />
        <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}" />
        <Setter Property="Padding" Value="3" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ToolButton.ToolBar.MouseOverMashBrush}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="Transparent" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Gray3}" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>